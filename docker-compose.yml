x-logging: &default-logging
  driver: "none"

services:
  front:
    build:
      context: ./front
      dockerfile: ../docker/Dockerfile.front
    volumes:
      - ./front:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    # Remove the command line here
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
 
  back:
    build:
      context: ./back
      dockerfile: ../docker/Dockerfile.back
    volumes:
      - ./back:/app
      
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - RABBITMQ_URL=${RABBITMQ_URL}
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT}
      - ROOT_PATH=/trading/api
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
      - FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-service-account.json
    depends_on:
      - rabbitmq
      - mongodb
    # Remove the command line here
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - front
      - back
    networks:
      - app-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  ngrok:
    image: ngrok/ngrok:latest
    command: 
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./docker/ngrok.yml:/etc/ngrok.yml
    ports:
      - "4040:4040" 
    depends_on:
      - nginx
    networks:
      - app-network  # Add this line
    logging: *default-logging

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network  # Add this line
    logging: *default-logging

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network  # Add this line
    logging: *default-logging

volumes:
  rabbitmq_data:
  mongodb_data:

networks:
  app-network:
    driver: bridge