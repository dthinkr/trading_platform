services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    expose:
      - "3000"

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    expose:
      - "8000"
    environment:
      - PORT=8000
      - RABBITMQ_URL=amqp://rabbitmq:5672/
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    depends_on:
      - rabbitmq
      - mongodb

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  ngrok:
    image: ngrok/ngrok:latest
    command: 
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - "4040:4040" 
    depends_on:
      - nginx

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

volumes:
  rabbitmq_data:
  mongodb_data: